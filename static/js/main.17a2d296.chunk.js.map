{"version":3,"sources":["CGOL/om.txt","CGOL/CGOL.js","Projects/projects.js","index.js"],"names":["Cell","props","className","alive","Grid","setTimeout","update","length","Number","document","documentElement","style","setProperty","cellsize","window","innerWidth","height","Math","floor","innerHeight","maxHeight","state","Array","fill","map","onresize","min","grid","n","i","setState","oldgrid","push","j","neighbors","k","l","fetch","omurl","res","text","om","split","s","this","row","h","random","cell","Fragment","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.17a2d296.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/om.e4091921.txt\";","import React, { Component } from 'react';\nimport omurl from './om.txt';\nimport './CGOL.scss';\n\nclass Grid extends Component {\n\n  constructor(props) {\n    super(props);\n    setTimeout(() => this.update(), 1250);\n    this.length = Number(props.length);\n    document.documentElement.style.setProperty('--length', this.length);\n    this.cellsize = window.innerWidth / this.length;\n    this.height = Math.floor(window.innerHeight / this.cellsize);\n    this.maxHeight = this.height;\n    this.state = {\n      \"grid\": Array(this.height).fill(0).map(() =>\n        Array(this.length).fill(0).map(() => false))\n    };\n    window.onresize = () => {\n      this.cellsize = window.innerWidth / this.length;\n      this.height = Math.min(Math.floor(window.innerHeight / this.cellsize), this.maxHeight);\n      var grid = Array(this.height).fill(0).map((n, i) =>\n        this.state.grid[i] || Array(this.length).fill(false));\n      this.setState({ grid });\n    };\n  }\n\n  update() {\n    setTimeout(() => {\n      const oldgrid = this.state.grid;\n      var grid = [];\n      for (let i = 0; i < oldgrid.length; i++) {\n        grid.push([]);\n        for (let j = 0; j < oldgrid[i].length; j++) {\n          var neighbors = 0;\n          for (let k = -1; k <= 1; k++) {\n            for (let l = -1; l <= 1; l++) {\n              if (\n                (k === 0 && l === 0) ||\n                (i + k < 0 || i + k >= oldgrid.length) ||\n                (j + l < 0 || j + l >= oldgrid[i].length)\n              ) continue;\n              if (oldgrid[i + k][j + l]) neighbors++;\n            }\n          }\n          grid[i][j] = oldgrid[i][j]\n            ? neighbors === 2 || neighbors === 3\n            : neighbors === 3;\n        }\n      }\n      this.setState({ grid });\n      this.update();\n    }, 150);\n  }\n\n  async componentDidMount() {\n    const res = await fetch(omurl);\n    const text = await res.text();\n    const om = text.split('\\n').map(s =>\n      s.split(', ').map(n => n === \"1\"));\n    var grid = Array(this.height).fill(0)\n      .map(() => Array(this.length).fill(false));\n    grid = grid.map((row, i) => {\n      const h = Math.floor(i - (this.height - om.length) / 2);\n      const dist = 4;\n      if (om.length <= h || h < 0) {\n        if (om.length + dist > h && h >= -dist) return row;\n        return row.map(() => Math.random() < 0.15);\n      }\n      const l = Math.floor((this.length - om[h].length) / 2);\n      return row.map((cell, j) => om[h][j - l] || false);\n    });\n    this.setState({ grid });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.grid.map((row, i) =>\n          <div className=\"row\">{row.map((cell, j) =>\n            <Cell alive={cell} key={[i, j]} />)}</div>)}\n      </React.Fragment>\n    );\n  }\n\n}\n\nfunction Cell(props) {\n  return (\n    <div className={\"cell \" +\n      (props.alive ? \"alive\" : \"\")}></div>\n  );\n}\n\nexport default Grid;","import React, { Component } from 'react';\nimport './card.scss';\nimport './projects.scss';\n\nclass Projects extends Component {\n  // state = {  }\n  // render() { \n  //   return (  );\n  // }\n}\n\nexport default Projects;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Grid from './CGOL/CGOL.js';\nimport Projects from './Projects/projects.js';\nimport './main.scss';\nimport './title.scss';\n\nReactDOM.render(<Grid length=\"150\" />, document.getElementById('grid'));\n// ReactDOM.render(<Projects />, document.getElementById('projects'));"],"sourceRoot":""}