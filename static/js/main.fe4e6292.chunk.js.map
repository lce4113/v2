{"version":3,"sources":["CGOL/om.txt","CGOL/CGOL.js","index.js"],"names":["Cell","props","className","alive","Grid","length","Number","document","documentElement","style","setProperty","cellsize","window","innerWidth","height","Math","floor","innerHeight","maxHeight","state","Array","fill","map","onresize","min","grid","n","i","setState","setTimeout","oldgrid","push","j","neighbors","k","l","update","fetch","omurl","res","text","om","split","s","this","row","h","random","cell","Fragment","Component","ReactDOM","render","getElementById"],"mappings":"+PAAe,MAA0B,+B,MCuFzC,SAASA,EAAKC,GACZ,OACE,qBAAKC,UAAW,SACbD,EAAME,MAAQ,aAAe,MAIrBC,M,kDAxFb,WAAYH,GAAQ,IAAD,8BACjB,cAAMA,IACDI,OAASC,OAAOL,EAAMI,QAC3BE,SAASC,gBAAgBC,MAAMC,YAAY,WAAY,EAAKL,QAC5D,EAAKM,SAAWC,OAAOC,WAAa,EAAKR,OACzC,EAAKS,OAASC,KAAKC,MAAMJ,OAAOK,YAAc,EAAKN,UACnD,EAAKO,UAAY,EAAKJ,OACtB,EAAKK,MAAQ,CACX,KAAQC,MAAM,EAAKN,QAAQO,KAAK,GAAGC,KAAI,kBACrCF,MAAM,EAAKf,QAAQgB,KAAK,GAAGC,KAAI,kBAAM,SAEzCV,OAAOW,SAAW,WAChB,EAAKZ,SAAWC,OAAOC,WAAa,EAAKR,OACzC,EAAKS,OAASC,KAAKS,IAAIT,KAAKC,MAAMJ,OAAOK,YAAc,EAAKN,UAAW,EAAKO,WAC5E,IAAIO,EAAOL,MAAM,EAAKN,QAAQO,KAAK,GAAGC,KAAI,SAACI,EAAGC,GAAJ,OACxC,EAAKR,MAAMM,KAAKE,IAAMP,MAAM,EAAKf,QAAQgB,MAAK,MAChD,EAAKO,SAAS,CAAEH,UAhBD,E,qDAoBT,IAAD,OACPI,YAAW,WAGT,IAFA,IAAMC,EAAU,EAAKX,MAAMM,KACvBA,EAAO,GACFE,EAAI,EAAGA,EAAIG,EAAQzB,OAAQsB,IAAK,CACvCF,EAAKM,KAAK,IACV,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQH,GAAGtB,OAAQ2B,IAAK,CAE1C,IADA,IAAIC,EAAY,EACPC,GAAK,EAAGA,GAAK,EAAGA,IACvB,IAAK,IAAIC,GAAK,EAAGA,GAAK,EAAGA,IAEd,IAAND,GAAiB,IAANC,GACXR,EAAIO,EAAI,GAAKP,EAAIO,GAAKJ,EAAQzB,QAC9B2B,EAAIG,EAAI,GAAKH,EAAIG,GAAKL,EAAQH,GAAGtB,QAEhCyB,EAAQH,EAAIO,GAAGF,EAAIG,IAAIF,IAG/BR,EAAKE,GAAGK,GAAKF,EAAQH,GAAGK,IACN,IAAdC,GACc,IAAdA,GAGR,EAAKL,SAAS,CAAEH,SAChB,EAAKW,WACJ,O,uLAIeC,MAAMC,G,cAAlBC,E,gBACaA,EAAIC,O,OAAjBA,E,OACAC,EAAKD,EAAKE,MAAM,MAAMpB,KAAI,SAAAqB,GAAC,OAC/BA,EAAED,MAAM,MAAMpB,KAAI,SAAAI,GAAC,MAAU,MAANA,QAGzBD,GAFIA,EAAOL,MAAMwB,KAAK9B,QAAQO,KAAK,GAChCC,KAAI,kBAAMF,MAAM,EAAKf,QAAQgB,MAAK,OACzBC,KAAI,SAACuB,EAAKlB,GACpB,IAAMmB,EAAI/B,KAAKC,MAAMW,GAAK,EAAKb,OAAS2B,EAAGpC,QAAU,GAErD,GAAIoC,EAAGpC,QAAUyC,GAAKA,EAAI,EACxB,OAAIL,EAAGpC,OAFI,EAEYyC,GAAKA,IAFjB,EAEoCD,EACxCA,EAAIvB,KAAI,kBAAMP,KAAKgC,SAAW,OAEvC,IAAMZ,EAAIpB,KAAKC,OAAO,EAAKX,OAASoC,EAAGK,GAAGzC,QAAU,GACpD,OAAOwC,EAAIvB,KAAI,SAAC0B,EAAMhB,GAAP,OAAaS,EAAGK,GAAGd,EAAIG,KAAM,QAE9CS,KAAKhB,SAAS,CAAEH,SAChBI,YAAW,kBAAM,EAAKO,WAAU,M,sIAIhC,OACE,cAAC,IAAMa,SAAP,UACGL,KAAKzB,MAAMM,KAAKH,KAAI,SAACuB,EAAKlB,GAAN,OACnB,qBAAKzB,UAAU,MAAf,SAAsB2C,EAAIvB,KAAI,SAAC0B,EAAMhB,GAAP,OAC5B,cAAChC,EAAD,CAAMG,MAAO6C,GAAW,CAACrB,EAAGK,kB,GA5ErBkB,a,YCEnBC,IAASC,OAAO,cAAC,EAAD,CAAM/C,OAAO,QAAUE,SAAS8C,eAAe,W","file":"static/js/main.fe4e6292.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/om.e4091921.txt\";","import React, { Component } from 'react';\nimport omurl from './om.txt';\nimport './CGOL.css';\n\nclass Grid extends Component {\n\n  constructor(props) {\n    super(props);\n    this.length = Number(props.length);\n    document.documentElement.style.setProperty('--length', this.length);\n    this.cellsize = window.innerWidth / this.length;\n    this.height = Math.floor(window.innerHeight / this.cellsize);\n    this.maxHeight = this.height;\n    this.state = {\n      \"grid\": Array(this.height).fill(0).map(() =>\n        Array(this.length).fill(0).map(() => false))\n    };\n    window.onresize = () => {\n      this.cellsize = window.innerWidth / this.length;\n      this.height = Math.min(Math.floor(window.innerHeight / this.cellsize), this.maxHeight);\n      var grid = Array(this.height).fill(0).map((n, i) =>\n        this.state.grid[i] || Array(this.length).fill(false));\n      this.setState({ grid });\n    };\n  }\n\n  update() {\n    setTimeout(() => {\n      const oldgrid = this.state.grid;\n      var grid = [];\n      for (let i = 0; i < oldgrid.length; i++) {\n        grid.push([]);\n        for (let j = 0; j < oldgrid[i].length; j++) {\n          var neighbors = 0;\n          for (let k = -1; k <= 1; k++) {\n            for (let l = -1; l <= 1; l++) {\n              if (\n                (k === 0 && l === 0) ||\n                (i + k < 0 || i + k >= oldgrid.length) ||\n                (j + l < 0 || j + l >= oldgrid[i].length)\n              ) continue;\n              if (oldgrid[i + k][j + l]) neighbors++;\n            }\n          }\n          grid[i][j] = oldgrid[i][j]\n            ? neighbors === 2 || neighbors === 3\n            : neighbors === 3;\n        }\n      }\n      this.setState({ grid });\n      this.update();\n    }, 150);\n  }\n\n  async componentDidMount() {\n    const res = await fetch(omurl);\n    const text = await res.text();\n    const om = text.split('\\n').map(s =>\n      s.split(', ').map(n => n === \"1\"));\n    var grid = Array(this.height).fill(0)\n      .map(() => Array(this.length).fill(false));\n    grid = grid.map((row, i) => {\n      const h = Math.floor(i - (this.height - om.length) / 2);\n      const dist = 4;\n      if (om.length <= h || h < 0) {\n        if (om.length + dist > h && h >= -dist) return row;\n        return row.map(() => Math.random() < 0.15);\n      }\n      const l = Math.floor((this.length - om[h].length) / 2);\n      return row.map((cell, j) => om[h][j - l] || false);\n    });\n    this.setState({ grid });\n    setTimeout(() => this.update(), 1250);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.grid.map((row, i) =>\n          <div className=\"row\">{row.map((cell, j) =>\n            <Cell alive={cell} key={[i, j]} />)}</div>)}\n      </React.Fragment>\n    );\n  }\n\n}\n\nfunction Cell(props) {\n  return (\n    <div className={\"cell \" +\n      (props.alive ? \"alive-cell\" : \"\")}></div>\n  );\n}\n\nexport default Grid;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Grid from './CGOL/CGOL.js';\nimport './title.css';\nimport './main.css';\n\nReactDOM.render(<Grid length=\"100\" />, document.getElementById('grid'));"],"sourceRoot":""}